[
    {
        "id": "711f44dc.b8379c",
        "type": "subflow",
        "name": "Notification",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 480,
                "wires": [
                    {
                        "id": "bb6496b6.c5fb38"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#4A88C0",
        "icon": "font-awesome/fa-comment",
        "status": {
            "x": 1740,
            "y": 100,
            "wires": [
                {
                    "id": "4e1a58dc.5faf88",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "286dba59.7ed416",
        "type": "group",
        "z": "711f44dc.b8379c",
        "name": "Telegram",
        "style": {
            "stroke": "#000000",
            "fill": "#7f8faf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fe563f3b.27a4",
            "a5718a48.8221c8",
            "a1937b5e.f10f08",
            "74de5d62.659ac4",
            "6bccc1cf.04292",
            "ba9c06f3.258228",
            "bb563cb0.de18d",
            "8098137f.117d6",
            "fdc2c34.6b5b44",
            "4adb3e12.c6031",
            "8c1c7eae.f4fe8"
        ],
        "x": 874,
        "y": 919,
        "w": 872,
        "h": 362
    },
    {
        "id": "3ba17f01.1ad71",
        "type": "group",
        "z": "711f44dc.b8379c",
        "name": "TTS",
        "style": {
            "stroke": "#000000",
            "fill": "#7fb7df",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3804914.3e0396e",
            "9be43a39.86fb38",
            "50d5d992.12f778",
            "5d1f7d2d.00d694",
            "ce050387.d13e9",
            "eaee88f3.fe9138",
            "45b1fc9f.afafc4",
            "b8f7a36e.3e1aa",
            "5214f35f.538f4c",
            "3ed2b5a9.244f3a",
            "5d7f8264.16666c",
            "1af7d6f3.9aaa19",
            "ca608072.a3c81",
            "e5fe9d8c.96704",
            "60a2789f.1842a8",
            "4bbdd1c0.ff6a7",
            "18cbe457.1dfa6c"
        ],
        "x": 874,
        "y": 179,
        "w": 2572,
        "h": 122
    },
    {
        "id": "53f4a8db.b4d4",
        "type": "group",
        "z": "711f44dc.b8379c",
        "name": "SMS",
        "style": {
            "stroke": "#000000",
            "fill": "#6f2fa0",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "75261914.04f268",
            "8dd71a85.f2d438",
            "a3064f17.e8a538"
        ],
        "x": 874,
        "y": 1309,
        "w": 552,
        "h": 82
    },
    {
        "id": "57b5e8a3.37d5e8",
        "type": "group",
        "z": "711f44dc.b8379c",
        "name": "E-Mail",
        "style": {
            "stroke": "#000000",
            "fill": "#ffcf3f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ecea9947.6e5848",
            "e8221.6da3addf8",
            "bb7809ff.a41588",
            "7bedaa16.93eda4"
        ],
        "x": 874,
        "y": 459,
        "w": 1032,
        "h": 82
    },
    {
        "id": "5cda64bd.38daec",
        "type": "group",
        "z": "711f44dc.b8379c",
        "name": "HTML5",
        "style": {
            "stroke": "#000000",
            "fill": "#3f93cf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8b310362.7bd2d",
            "4fba970c.85c0c8",
            "81b3a930.d07b08",
            "4e1a58dc.5faf88"
        ],
        "x": 874,
        "y": 59,
        "w": 812,
        "h": 82
    },
    {
        "id": "64bee8ef.b70198",
        "type": "group",
        "z": "711f44dc.b8379c",
        "name": "Mattermost",
        "style": {
            "stroke": "#000000",
            "fill": "#c8e7a7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dc0af305.08c5c",
            "1fd1b55c.8aa76b",
            "865195e1.9bc408",
            "320a88d2.7cb0a8",
            "5b2efbf4.ae0024",
            "6a81a4ef.2d8d9c",
            "2b204825.ddc228",
            "8275ade.a46ba5",
            "5cef7e36.fb01f",
            "8e5741c9.438b9"
        ],
        "x": 874,
        "y": 739,
        "w": 1532,
        "h": 162
    },
    {
        "id": "7e7775b.f8ebb8c",
        "type": "group",
        "z": "711f44dc.b8379c",
        "name": "Awtrix",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ff7f7f",
            "color": "#000000"
        },
        "nodes": [
            "fd1b76aa.ef0938",
            "39428588.44afda",
            "4f3f2917.7e3108"
        ],
        "x": 874,
        "y": 1419,
        "w": 552,
        "h": 82
    },
    {
        "id": "ecdc435a.d458e",
        "type": "group",
        "z": "711f44dc.b8379c",
        "name": "Discord",
        "style": {
            "stroke": "#000000",
            "fill": "#b797cf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "abcea9a6.402238",
            "7aee817f.03b6a",
            "c8f2b71d.230328",
            "5e87cf54.db54",
            "e02544ec.c0c9c8",
            "e9b7f1e.7b2dc1",
            "d1db25d0.686ce8",
            "1c900d5e.09b683",
            "e896886c.c45658",
            "2e838fa7.9cc17"
        ],
        "x": 874,
        "y": 559,
        "w": 1512,
        "h": 162
    },
    {
        "id": "ecef5432.e60ef8",
        "type": "group",
        "z": "711f44dc.b8379c",
        "name": "Home Assistant",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "21b0610e.4e7cbe",
            "4fa3a02b.4b12f",
            "868b8ddb.892fa",
            "24afc5e8.8aadfa",
            "e9da4b4c.c20068"
        ],
        "x": 874,
        "y": 339,
        "w": 1032,
        "h": 82
    },
    {
        "id": "11d2840b.c4c60c",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "name": "Redirect to dest",
        "property": "dest",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "html5",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "tts_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "tel_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "mail_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "discord_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "mattermost_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "telegram_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "sms_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "awtrix_",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 720,
        "y": 580,
        "wires": [
            [
                "4fba970c.85c0c8"
            ],
            [
                "45b1fc9f.afafc4"
            ],
            [
                "4fa3a02b.4b12f"
            ],
            [
                "e8221.6da3addf8"
            ],
            [
                "7aee817f.03b6a"
            ],
            [
                "1fd1b55c.8aa76b"
            ],
            [
                "fe563f3b.27a4"
            ],
            [
                "a3064f17.e8a538"
            ],
            [
                "4f3f2917.7e3108"
            ]
        ],
        "outputLabels": [
            "",
            "",
            "mobile_clement",
            "email",
            "discord",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "8b310362.7bd2d",
        "type": "api-call-service",
        "z": "711f44dc.b8379c",
        "g": "5cda64bd.38daec",
        "name": "html5",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "debugenabled": false,
        "service_domain": "notify",
        "service": "html5",
        "entityId": "",
        "data": "{\"message\":\"{{message}}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1410,
        "y": 100,
        "wires": [
            [
                "4e1a58dc.5faf88"
            ]
        ]
    },
    {
        "id": "4fba970c.85c0c8",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "5cda64bd.38daec",
        "name": "Check Short Message",
        "func": "if (msg.short_message !== 'undefined' ) {\n    msg.short_message = msg.message;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 100,
        "wires": [
            [
                "81b3a930.d07b08"
            ]
        ]
    },
    {
        "id": "21b0610e.4e7cbe",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "ecef5432.e60ef8",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.home_assistant.dest.\"+dest) || 'undefined'\nmsg.entity_id = config;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1330,
        "y": 380,
        "wires": [
            [
                "868b8ddb.892fa"
            ]
        ]
    },
    {
        "id": "4fa3a02b.4b12f",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "ecef5432.e60ef8",
        "name": "Check Short Message",
        "func": "if (msg.short_message !== 'undefined' ) {\n    msg.short_message = msg.message;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "24afc5e8.8aadfa"
            ]
        ]
    },
    {
        "id": "868b8ddb.892fa",
        "type": "api-call-service",
        "z": "711f44dc.b8379c",
        "g": "ecef5432.e60ef8",
        "name": "Home Assistant ",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "debugenabled": false,
        "service_domain": "notify",
        "service": "{{ entity_id }}",
        "entityId": "",
        "data": "{\"message\":\"{{message}}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1520,
        "y": 380,
        "wires": [
            [
                "e9da4b4c.c20068"
            ]
        ]
    },
    {
        "id": "ecea9947.6e5848",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "57b5e8a3.37d5e8",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.email.dest.\"+dest) || 'undefined'\nmsg.to = config;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1290,
        "y": 500,
        "wires": [
            [
                "bb7809ff.a41588",
                "7bedaa16.93eda4"
            ]
        ]
    },
    {
        "id": "e8221.6da3addf8",
        "type": "change",
        "z": "711f44dc.b8379c",
        "g": "57b5e8a3.37d5e8",
        "name": "Message2Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 500,
        "wires": [
            [
                "ecea9947.6e5848"
            ]
        ]
    },
    {
        "id": "bb7809ff.a41588",
        "type": "e-mail",
        "z": "711f44dc.b8379c",
        "g": "57b5e8a3.37d5e8",
        "server": "172.17.0.1",
        "port": "25",
        "secure": false,
        "tls": false,
        "name": "",
        "dname": "",
        "x": 1550,
        "y": 500,
        "wires": []
    },
    {
        "id": "6d93ed07.b83094",
        "type": "comment",
        "z": "711f44dc.b8379c",
        "name": "========== DOCUMENTATION EN ==========",
        "info": "# Information\n\nThis flow aims to centralize all notifications.\n\nActualy, it's work with :\n- HTML5 (by Home Assistant)\n- Discord\n- Telegram\n- Email\n- TTS\n- Home Assistant (Mobile App)\n- SMS by HTTP\n\n# Requirement\n\n- node-red-contrib-chatbot\n- node-red-contrib-chatbot-discord\n- node-red-contrib-string\n- node-red-contrib-home-assistant-websocket\n- node-red-node-email\n\n\n# Input\n\nIn this exemple, you can find all inut :\n\n```\nmsg.title = \"Home Assistant - New version available\"\nmsg.dest = \"tel_clement;mail_clement;tts_80_hall\"  \nmsg.message = \"Home Assistant : New version available => 0.113.0 \\n\nhttps://github.com/home-assistant/core/releases/tag/0.113.0\"\nmsg.short_message = \"Home Assistant : New version available (0.113.0)\"\nmsg.image = \"/data/image.jpeg\"\nmsg.document = \"/data/doc.js\"\nmsg.video = \"/data/video.mp4\"\n```\n> All inputs are not necessarily compatible with all services\n\n\n## Title / `msg.title`\n\n_Available on : Email_\n\nTitle use only for email\n\n_Exemple:_\n\n```\nmsg.title = \"Home Assistant - New version available\"\n```\n\n## Message / `msg.message`\n\n_Available on : Email / Telegram / Discord_\n\nLong version of message\n\n_Exemple:_\n\n```\nmsg.message = \"Home Assistant : New version available => 0.113.0 \\n https://github.com/home-assistant/core/releases/tag/0.113.0\"\n```\n\n## Short Message / `msg.short_message`\n_Available on : HTML5 / Home Assistant_\n\nShort Message use in \"popup'\n\n_Exemple:_\n```\nmsg.short_message = \"Home Assistant : New version available (0.113.0)\"\n```\n\n**WARNING : Message are Trim & `\\n` replace by space**\n> => If not set, i take msg.message.\n  \n## Image / `msg.image`\n_Available on : Telegram_\n\n_Exemple:_\n```\nmsg.image = \"/data/image.jpeg\"\nmsg.image = \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\n```\n## Document / `msg.document`\n_Available on : Telegram_\n_Exemple:_\n```\nmsg.document = \"/data/doc.js\"\n```\n## Video / `msg.video`\n_Available on : Telegram_\n_Exemple:_\n```\nmsg.video = \"/data/video.mp4\"\n```\n\n## Destination / `msg.dest`\n\n_Available on : All_\n\nIs a string to contains all destination separated by \"`;`\"\n\n_Exemple:_\n\n```\nmsg.dest = \"tel_clement;mail_clement;tts_80_hall\"  \n```\n\nMessage send to :\n- tel_clement \n- mail_clement\n- tts_80_hall       \n\n### HTML5\nThis dest is always notify, you don't need to add this dest.\n\n### Discord \nDest must start by `discord_`\n\n_Exemple:_\n```\nmsg.dest = \"discord_communaute_news;discord_maison_information;discord_maison_network\"  \n```\n\n### Home Assistant \nDest must start by `tel_`\n\n_Exemple:_\n```\nmsg.dest = \"tel_clement;tel_papa;tel_maman\n```\n### Email \nDest must start by `mail_`\n\n_Exemple:_\n```\nmsg.dest = \"mail_clement;mail_thomas\"\n```\n### Telegram\nDest must start by `telegram_`\n\n_Exemple:_\n```\nmsg.dest = \"telegram_smarthome;telegram_familly\"\n```\n### TTS\nDest must start by `tts_`\n\nFormat : `tts_{VOLUME}_{ENTITY_ID_OF_MEDIA_PLAYER}`\n\n_Exemple:_\n```\nmsg.dest = \"tts_80_hall\"\n```\n\n### SMS\nDest must start by `sms_`\n\n\n_Exemple:_\n```\nmsg.dest = \"sms_clement\"\n```\n\n# Configuration\nSubflow get configuration in global variable `notif.`\n> TTS no need configuration\n\n_Exemple:_\n\n```\nvar configuration = \n{\n    \"discord\": {\n        \"dest\": {\n            \"discord_communaute_news\": \"https://discord.com/api/webhooks/XXXXXXXXXXXXXXXX\",\n            \"discord_communaute_zwave\": \"https://discord.com/api/webhooks/YYYYYYYYYYYYYYYY\",\n            \"discord_communaute_diy\": \"https://discord.com/api/webhooks/ZZZZZZZZZZZZZZZZZ\",\n        }\n    },\n    \"home_assistant\": {\n        \"dest\": {\n            \"tel_clement\": \"mobile_app_oneplus_a6010\",\n            \"tel_nathalie\": \"mobile_app_oneplus_a5000\"\n        }\n    },\n    \"email\": {\n        \"dest\": {\n            \"mail_clement\": \"email1@domain.fr\",\n            \"mail_john\": \"email2@domain.fr\",\n            \"mail_bibi\": \"email3@domain.fr\"        \n        }\n    },\n    \"telegram\": {\n        \"dest\": {\n            \"telegram_smarthome\": \"ID1\",\n            \"telegram_bot\": \"ID2\"        \n        }\n    },\n    \"mattermost\": {\n        \"dest\": {\n            \"mattermost_home\" : \"https://mattermost.domain.fr/hooks/XXXXXXXXXXXXXXXXXXXXXXXXX\",\n            \"mattermost_volets\" : \"https://mattermost.domain.fr/hooks/YYYYYYYYYYYYYYYYYYYYYYYY\",\n        }\n    },\n    \"sms\": {\n        \"url\": \"http://192.168.1.1:8080/?action=sendSms&number=##SMSNUMBER##&message=##MESSAGE##\",\n        \"dest\": {\n            \"sms_clement\": \"06XXXXXXXXX\",\n            \"sms_nathalie\": \"06YYYYYYYYY\",\n        }\n    }\n}\nglobal.set(\"notif\",configuration)\n\nreturn msg;\n```\n\nYou can take this flow to help you to configure sublow :) \n\n\n```\n[\n    {\n        \"id\": \"bbda9cf1.ad8ba\",\n        \"type\": \"inject\",\n        \"z\": \"a9ae8a01.8a5bd8\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": true,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 290,\n        \"y\": 260,\n        \"wires\": [\n            [\n                \"513d2c9.069c3d4\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"dacca689.055138\",\n        \"type\": \"function\",\n        \"z\": \"a9ae8a01.8a5bd8\",\n        \"name\": \"Configurateur EXEMPLE\",\n        \"func\": \"var configuration = \\n{\\n    \\\"discord\\\": {\\n        \\\"dest\\\": {\\n            \\\"discord_communaute_news\\\": \\\"https://discord.com/api/webhooks/XXXXXXXXXXXXXXXX\\\",\\n            \\\"discord_communaute_zwave\\\": \\\"https://discord.com/api/webhooks/YYYYYYYYYYYYYYYY\\\",\\n            \\\"discord_communaute_diy\\\": \\\"https://discord.com/api/webhooks/ZZZZZZZZZZZZZZZZZ\\\",\\n        }\\n    },\\n    \\\"home_assistant\\\": {\\n        \\\"dest\\\": {\\n            \\\"tel_clement\\\": \\\"mobile_app_oneplus_a6010\\\",\\n            \\\"tel_nathalie\\\": \\\"mobile_app_oneplus_a5000\\\"\\n        }\\n    },\\n    \\\"email\\\": {\\n        \\\"dest\\\": {\\n            \\\"mail_clement\\\": \\\"email1@domain.fr\\\",\\n            \\\"mail_john\\\": \\\"email2@domain.fr\\\",\\n            \\\"mail_bibi\\\": \\\"email3@domain.fr\\\"        \\n        }\\n    },\\n    \\\"telegram\\\": {\\n        \\\"dest\\\": {\\n            \\\"telegram_smarthome\\\": \\\"ID1\\\",\\n            \\\"telegram_bot\\\": \\\"ID2\\\"        \\n        }\\n    },\\n    \\\"mattermost\\\": {\\n        \\\"dest\\\": {\\n            \\\"mattermost_home\\\" : \\\"https://mattermost.domain.fr/hooks/XXXXXXXXXXXXXXXXXXXXXXXXX\\\",\\n            \\\"mattermost_volets\\\" : \\\"https://mattermost.domain.fr/hooks/YYYYYYYYYYYYYYYYYYYYYYYY\\\",\\n        }\\n    },\\n    \\\"sms\\\": {\\n        \\\"url\\\": \\\"http://192.168.1.1:8080/?action=sendSms&number=##SMSNUMBER##&message=##MESSAGE##\\\",\\n        \\\"dest\\\": {\\n            \\\"sms_clement\\\": \\\"06XXXXXXXXX\\\",\\n            \\\"sms_nathalie\\\": \\\"06YYYYYYYYY\\\",\\n        }\\n    }\\n}\\nglobal.set(\\\"notif\\\",configuration)\\n\\nreturn msg;\",\n        \"outputs\": 1,\n        \"noerr\": 0,\n        \"initialize\": \"\",\n        \"finalize\": \"\",\n        \"x\": 700,\n        \"y\": 260,\n        \"wires\": [\n            []\n        ]\n    },\n    {\n        \"id\": \"513d2c9.069c3d4\",\n        \"type\": \"change\",\n        \"z\": \"a9ae8a01.8a5bd8\",\n        \"name\": \"Remove old config\",\n        \"rules\": [\n            {\n                \"t\": \"delete\",\n                \"p\": \"notif\",\n                \"pt\": \"global\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 470,\n        \"y\": 260,\n        \"wires\": [\n            [\n                \"dacca689.055138\"\n            ]\n        ]\n    }\n]\n```\n\nExemple of input :\n\n```\n[{\"id\":\"66da3fb7.1e4ff\",\"type\":\"change\",\"z\":\"8a8a63c5.0c3c2\",\"name\":\"\",\"rules\":[{\"t\":\"set\",\"p\":\"title\",\"pt\":\"msg\",\"to\":\"Coucou\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"message\",\"pt\":\"msg\",\"to\":\"Long Message\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"short_message\",\"pt\":\"msg\",\"to\":\"Short Message\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"dest\",\"pt\":\"msg\",\"to\":\"tel_clement;mail_clement\",\"tot\":\"str\"}],\"action\":\"\",\"property\":\"\",\"from\":\"\",\"to\":\"\",\"reg\":false,\"x\":740,\"y\":1880,\"wires\":[[\"7300bcc2.c97c34\"]]}]\n```",
        "x": 300,
        "y": 240,
        "wires": []
    },
    {
        "id": "82df49fa.94fce8",
        "type": "split",
        "z": "711f44dc.b8379c",
        "name": "",
        "splt": ";",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "b75dca3b.2834b8"
            ]
        ]
    },
    {
        "id": "bb6496b6.c5fb38",
        "type": "change",
        "z": "711f44dc.b8379c",
        "name": "Convert dest2payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dest",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 480,
        "wires": [
            [
                "82df49fa.94fce8"
            ]
        ]
    },
    {
        "id": "b75dca3b.2834b8",
        "type": "delay",
        "z": "711f44dc.b8379c",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 280,
        "y": 580,
        "wires": [
            [
                "91588395.e426"
            ]
        ]
    },
    {
        "id": "91588395.e426",
        "type": "change",
        "z": "711f44dc.b8379c",
        "name": "Convert payload2dest",
        "rules": [
            {
                "t": "set",
                "p": "dest",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 580,
        "wires": [
            [
                "11d2840b.c4c60c"
            ]
        ]
    },
    {
        "id": "8c9a6e88.26e9f",
        "type": "comment",
        "z": "711f44dc.b8379c",
        "name": "========== DOCUMENTATION FR ==========",
        "info": "# Information\n\nCe subflow va vous permettre de notifier plusieurs service en même temps.\n\nActuellement il gérée les services :\n- HTML5 (by Home Assistant)\n- Discord\n- Telegram\n- Email\n- TTS\n- Home Assistant (Mobile App)\n- SMS via HTTP\n\n# Pré-requis\n\n- node-red-contrib-chatbot\n- node-red-contrib-chatbot-discord\n- node-red-contrib-string\n- node-red-contrib-home-assistant-websocket\n- node-red-node-email\n\n\n# Entrée\n\nVoici la liste des inputs actuellement possible :\n\n```\nmsg.title = \"Home Assistant - New version available\"\nmsg.dest = \"tel_clement;mail_clement;tts_80_hall\"  \nmsg.message = \"Home Assistant : New version available => 0.113.0 \\n\nhttps://github.com/home-assistant/core/releases/tag/0.113.0\"\nmsg.short_message = \"Home Assistant : New version available (0.113.0)\"\nmsg.image = \"/data/image.jpeg\"\nmsg.document = \"/data/doc.js\"\nmsg.video = \"/data/video.mp4\"\n```\n> Tout les inputs ne sont pas forcement compatible avec les differents services.\n\n## Titre / `msg.title`\n\n_Disponible sur : Email_\n\nTitre du mail.\n\n_Exemple:_\n\n```\nmsg.title = \"Home Assistant - New version available\"\n```\n\n## Message / `msg.message`\n\n_Disponible sur : Email / Telegram / Discord_\n\nVersion longue du message.\n\n_Exemple:_\n\n```\nmsg.message = \"Home Assistant : New version available => 0.113.0 \\n https://github.com/home-assistant/core/releases/tag/0.113.0\"\n```\n\n## Message court / `msg.short_message`\n\n_Disponible sur : HTML5 / Home Assistant_\n\nMessage reduit pour les services type \"popup\".\n\n_Exemple:_\n```\nmsg.short_message = \"Home Assistant : New version available (0.113.0)\"\n```\n\n**ATTENTION : Les messages est `trim` et les `\\n` sont remplacer par des espace**\n> => Si il n'est pas défini, je reprend les `msg.message`\n\n## Image / `msg.image`\n\n_Disponible sur : Telegram_\n\n_Exemple:_\n```\nmsg.image = \"/data/image.jpeg\"\nmsg.image = \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\n```\n## Document / `msg.document`\n\n_Disponible sur : Telegram_\n\n_Exemple:_\n```\nmsg.document = \"/data/doc.js\"\n```\n## Video / `msg.video`\n\n_Disponible sur : Telegram_\n\n_Exemple:_\n```\nmsg.video = \"/data/video.mp4\"\n```\n\n## Destinatation / `msg.dest`\nUn string qui contient la liste des services que vous désirez notifier séparer par des \"`;`\"\n\n_Exemple:_\n\n```\nmsg.dest = \"tel_clement;mail_clement;tts_80_hall\"  \n```\n\nLe message sera envoyé à :\n- tel_clement \n- mail_clement\n- tts_80_hall       \n\n### HTML5\nLa totalité des messages passe par ce système par défaut, pas besoin de l'ajouter en destination.\n\n### Discord \ndest doit commencer par `discord_`\n\n_Exemple:_\n```\nmsg.dest = \"discord_communaute_news;discord_maison_information;discord_maison_network\"  \n```\n\n### Home Assistant \ndest doit commencer par `tel_`\n\n_Exemple:_\n```\nmsg.dest = \"tel_clement;tel_papa;tel_maman\n```\n### Email \ndest doit commencer par `mail_`\n\n_Exemple:_\n```\nmsg.dest = \"mail_clement;mail_thomas\"\n```\n### Telegram\ndest doit commencer par `telegram_`\n\n_Exemple:_\n```\nmsg.dest = \"telegram_smarthome;telegram_familly\"\n```\n### TTS\ndest doit commencer par `tts_`\n\nFormat : `tts_{VOLUME}_{ENTITY_ID_DU_MEDIA_PLAYER}`\n\n_Exemple:_\n```\nmsg.dest = \"tts_80_hall\"\n```\n### SMS\ndest doit commencer par `sms_`\n\n_Exemple:_\n```\nmsg.dest = \"sms_clement\"\n```\n\n# Configuration\n\nLe subflow récupére sa configuration via la variable Global `notif.`\n\n> TTS n'a besoin d'aucune configuration particulière\n\n_Exemple:_\n\n```\nvar configuration = \n{\n    \"discord\": {\n        \"dest\": {\n            \"discord_communaute_news\": \"https://discord.com/api/webhooks/XXXXXXXXXXXXXXXX\",\n            \"discord_communaute_zwave\": \"https://discord.com/api/webhooks/YYYYYYYYYYYYYYYY\",\n            \"discord_communaute_diy\": \"https://discord.com/api/webhooks/ZZZZZZZZZZZZZZZZZ\",\n        }\n    },\n    \"home_assistant\": {\n        \"dest\": {\n            \"tel_clement\": \"mobile_app_oneplus_a6010\",\n            \"tel_nathalie\": \"mobile_app_oneplus_a5000\"\n        }\n    },\n    \"email\": {\n        \"dest\": {\n            \"mail_clement\": \"email1@domain.fr\",\n            \"mail_john\": \"email2@domain.fr\",\n            \"mail_bibi\": \"email3@domain.fr\"        \n        }\n    },\n    \"telegram\": {\n        \"dest\": {\n            \"telegram_smarthome\": \"ID1\",\n            \"telegram_bot\": \"ID2\"        \n        }\n    },\n    \"mattermost\": {\n        \"dest\": {\n            \"mattermost_home\" : \"https://mattermost.domain.fr/hooks/XXXXXXXXXXXXXXXXXXXXXXXXX\",\n            \"mattermost_volets\" : \"https://mattermost.domain.fr/hooks/YYYYYYYYYYYYYYYYYYYYYYYY\",\n        }\n    },\n    \"sms\": {\n        \"url\": \"http://192.168.1.1:8080/?action=sendSms&number=##SMSNUMBER##&message=##MESSAGE##\",\n        \"dest\": {\n            \"sms_clement\": \"06XXXXXXXXX\",\n            \"sms_nathalie\": \"06YYYYYYYYY\",\n        }\n    }\n}\nglobal.set(\"notif\",configuration)\n\nreturn msg;\n```\n\nPour vous aidez dans la configuration voici une function qui va vous permettres de pousser votre configuration à chaque deploiement.\n\nTout ce passe dans le node `Function`.\n\n\n```\n[\n    {\n        \"id\": \"bbda9cf1.ad8ba\",\n        \"type\": \"inject\",\n        \"z\": \"a9ae8a01.8a5bd8\",\n        \"name\": \"\",\n        \"props\": [\n            {\n                \"p\": \"payload\"\n            }\n        ],\n        \"repeat\": \"\",\n        \"crontab\": \"\",\n        \"once\": true,\n        \"onceDelay\": 0.1,\n        \"topic\": \"\",\n        \"payload\": \"\",\n        \"payloadType\": \"date\",\n        \"x\": 290,\n        \"y\": 260,\n        \"wires\": [\n            [\n                \"513d2c9.069c3d4\"\n            ]\n        ]\n    },\n    {\n        \"id\": \"dacca689.055138\",\n        \"type\": \"function\",\n        \"z\": \"a9ae8a01.8a5bd8\",\n        \"name\": \"Configurateur EXEMPLE\",\n        \"func\": \"var configuration = \\n{\\n    \\\"discord\\\": {\\n        \\\"dest\\\": {\\n            \\\"discord_communaute_news\\\": \\\"https://discord.com/api/webhooks/XXXXXXXXXXXXXXXX\\\",\\n            \\\"discord_communaute_zwave\\\": \\\"https://discord.com/api/webhooks/YYYYYYYYYYYYYYYY\\\",\\n            \\\"discord_communaute_diy\\\": \\\"https://discord.com/api/webhooks/ZZZZZZZZZZZZZZZZZ\\\",\\n        }\\n    },\\n    \\\"home_assistant\\\": {\\n        \\\"dest\\\": {\\n            \\\"tel_clement\\\": \\\"mobile_app_oneplus_a6010\\\",\\n            \\\"tel_nathalie\\\": \\\"mobile_app_oneplus_a5000\\\"\\n        }\\n    },\\n    \\\"email\\\": {\\n        \\\"dest\\\": {\\n            \\\"mail_clement\\\": \\\"email1@domain.fr\\\",\\n            \\\"mail_john\\\": \\\"email2@domain.fr\\\",\\n            \\\"mail_bibi\\\": \\\"email3@domain.fr\\\"        \\n        }\\n    },\\n    \\\"telegram\\\": {\\n        \\\"dest\\\": {\\n            \\\"telegram_smarthome\\\": \\\"ID1\\\",\\n            \\\"telegram_bot\\\": \\\"ID2\\\"        \\n        }\\n    },\\n    \\\"mattermost\\\": {\\n        \\\"dest\\\": {\\n            \\\"mattermost_home\\\" : \\\"https://mattermost.domain.fr/hooks/XXXXXXXXXXXXXXXXXXXXXXXXX\\\",\\n            \\\"mattermost_volets\\\" : \\\"https://mattermost.domain.fr/hooks/YYYYYYYYYYYYYYYYYYYYYYYY\\\",\\n        }\\n    },\\n    \\\"sms\\\": {\\n        \\\"url\\\": \\\"http://192.168.1.1:8080/?action=sendSms&number=##SMSNUMBER##&message=##MESSAGE##\\\",\\n        \\\"dest\\\": {\\n            \\\"sms_clement\\\": \\\"06XXXXXXXXX\\\",\\n            \\\"sms_nathalie\\\": \\\"06YYYYYYYYY\\\",\\n        }\\n    }\\n}\\nglobal.set(\\\"notif\\\",configuration)\\n\\nreturn msg;\",\n        \"outputs\": 1,\n        \"noerr\": 0,\n        \"initialize\": \"\",\n        \"finalize\": \"\",\n        \"x\": 700,\n        \"y\": 260,\n        \"wires\": [\n            []\n        ]\n    },\n    {\n        \"id\": \"513d2c9.069c3d4\",\n        \"type\": \"change\",\n        \"z\": \"a9ae8a01.8a5bd8\",\n        \"name\": \"Remove old config\",\n        \"rules\": [\n            {\n                \"t\": \"delete\",\n                \"p\": \"notif\",\n                \"pt\": \"global\"\n            }\n        ],\n        \"action\": \"\",\n        \"property\": \"\",\n        \"from\": \"\",\n        \"to\": \"\",\n        \"reg\": false,\n        \"x\": 470,\n        \"y\": 260,\n        \"wires\": [\n            [\n                \"dacca689.055138\"\n            ]\n        ]\n    }\n]\n```\n\nEt voici un exemple de flow d'input :\n\n```\n[{\"id\":\"66da3fb7.1e4ff\",\"type\":\"change\",\"z\":\"8a8a63c5.0c3c2\",\"name\":\"\",\"rules\":[{\"t\":\"set\",\"p\":\"title\",\"pt\":\"msg\",\"to\":\"Coucou\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"message\",\"pt\":\"msg\",\"to\":\"Long Message\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"short_message\",\"pt\":\"msg\",\"to\":\"Short Message\",\"tot\":\"str\"},{\"t\":\"set\",\"p\":\"dest\",\"pt\":\"msg\",\"to\":\"tel_clement;mail_clement\",\"tot\":\"str\"}],\"action\":\"\",\"property\":\"\",\"from\":\"\",\"to\":\"\",\"reg\":false,\"x\":740,\"y\":1880,\"wires\":[[\"7300bcc2.c97c34\"]]}]\n```",
        "x": 300,
        "y": 300,
        "wires": []
    },
    {
        "id": "3804914.3e0396e",
        "type": "api-call-service",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Media Player : ON",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "debugenabled": false,
        "service_domain": "media_player",
        "service": "turn_on",
        "entityId": "media_player.{{dest}}",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1590,
        "y": 260,
        "wires": [
            [
                "50d5d992.12f778"
            ]
        ]
    },
    {
        "id": "9be43a39.86fb38",
        "type": "api-current-state",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Get Current Volume",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "media_player.{{dest}}",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 1960,
        "y": 260,
        "wires": [
            [
                "ce050387.d13e9"
            ]
        ]
    },
    {
        "id": "50d5d992.12f778",
        "type": "delay",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1780,
        "y": 260,
        "wires": [
            [
                "9be43a39.86fb38"
            ]
        ]
    },
    {
        "id": "5d1f7d2d.00d694",
        "type": "api-call-service",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Set volume",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "debugenabled": true,
        "service_domain": "media_player",
        "service": "volume_set",
        "entityId": "media_player.{{dest}}",
        "data": "{\"entity_id\":\"media_player.{{ dest }}\",\"volume_level\":\"{{ volume }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 2390,
        "y": 260,
        "wires": [
            [
                "b8f7a36e.3e1aa"
            ]
        ]
    },
    {
        "id": "ce050387.d13e9",
        "type": "change",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Save Current Volume",
        "rules": [
            {
                "t": "set",
                "p": "current_volume",
                "pt": "msg",
                "to": "data.attributes.volume_level",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 260,
        "wires": [
            [
                "5d1f7d2d.00d694"
            ]
        ]
    },
    {
        "id": "eaee88f3.fe9138",
        "type": "api-current-state",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Get State",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "media_player.{{dest}}",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 1260,
        "y": 260,
        "wires": [
            [
                "60a2789f.1842a8"
            ]
        ]
    },
    {
        "id": "45b1fc9f.afafc4",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Split Message",
        "func": "dest = msg.dest.split('_');\nmsg.volume = dest[1]/100;\nmsg.dest = msg.dest.replace('tts_'+dest[1]+\"_\",\"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 260,
        "wires": [
            [
                "4bbdd1c0.ff6a7"
            ]
        ]
    },
    {
        "id": "b8f7a36e.3e1aa",
        "type": "api-call-service",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Play TTS",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "debugenabled": false,
        "service_domain": "tts",
        "service": "google_translate_say",
        "entityId": "media_player.{{dest}}",
        "data": "{\"entity_id\":\"media_player.{{ dest }}\",\"message\":\"{{ message }}\",\"language\":\"fr\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 2540,
        "y": 260,
        "wires": [
            [
                "3ed2b5a9.244f3a"
            ]
        ]
    },
    {
        "id": "5214f35f.538f4c",
        "type": "api-call-service",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Reset volume",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "debugenabled": true,
        "service_domain": "media_player",
        "service": "volume_set",
        "entityId": "media_player.{{dest}}",
        "data": "{\"entity_id\":\"media_player.{{ dest }}\",\"volume_level\":\"{{ current_volume }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 3020,
        "y": 260,
        "wires": [
            [
                "1af7d6f3.9aaa19"
            ]
        ]
    },
    {
        "id": "3ed2b5a9.244f3a",
        "type": "delay",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2700,
        "y": 260,
        "wires": [
            [
                "5d7f8264.16666c"
            ]
        ]
    },
    {
        "id": "5d7f8264.16666c",
        "type": "api-current-state",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Get State",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "outputs": 2,
        "halt_if": "playing",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "media_player.{{dest}}",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 2840,
        "y": 260,
        "wires": [
            [
                "ca608072.a3c81"
            ],
            [
                "5214f35f.538f4c"
            ]
        ]
    },
    {
        "id": "1af7d6f3.9aaa19",
        "type": "api-call-service",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Media Player : OFF",
        "server": "7f33d7bb.9361a8",
        "version": 1,
        "debugenabled": false,
        "service_domain": "media_player",
        "service": "turn_off",
        "entityId": "media_player.{{dest}}",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 3210,
        "y": 260,
        "wires": [
            [
                "18cbe457.1dfa6c"
            ]
        ]
    },
    {
        "id": "ca608072.a3c81",
        "type": "link out",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "OUT : Wait idle",
        "links": [
            "e5fe9d8c.96704"
        ],
        "x": 3020,
        "y": 220,
        "wires": [],
        "l": true
    },
    {
        "id": "e5fe9d8c.96704",
        "type": "link in",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "IN : Wait idle",
        "links": [
            "ca608072.a3c81"
        ],
        "x": 2530,
        "y": 220,
        "wires": [
            [
                "3ed2b5a9.244f3a"
            ]
        ],
        "l": true
    },
    {
        "id": "60a2789f.1842a8",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Check status",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "idle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 260,
        "wires": [
            [
                "3804914.3e0396e"
            ],
            [
                "3804914.3e0396e"
            ]
        ]
    },
    {
        "id": "81b3a930.d07b08",
        "type": "string",
        "z": "711f44dc.b8379c",
        "g": "5cda64bd.38daec",
        "name": "",
        "methods": [
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "\\n"
                    },
                    {
                        "type": "str",
                        "value": " "
                    }
                ]
            },
            {
                "name": "trim",
                "params": []
            }
        ],
        "prop": "message",
        "propout": "message",
        "object": "msg",
        "objectout": "msg",
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "8b310362.7bd2d"
            ]
        ]
    },
    {
        "id": "24afc5e8.8aadfa",
        "type": "string",
        "z": "711f44dc.b8379c",
        "g": "ecef5432.e60ef8",
        "name": "",
        "methods": [
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "\\n"
                    },
                    {
                        "type": "str",
                        "value": " "
                    }
                ]
            },
            {
                "name": "trim",
                "params": []
            }
        ],
        "prop": "message",
        "propout": "message",
        "object": "msg",
        "objectout": "msg",
        "x": 1170,
        "y": 380,
        "wires": [
            [
                "21b0610e.4e7cbe"
            ]
        ]
    },
    {
        "id": "4bbdd1c0.ff6a7",
        "type": "string",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "",
        "methods": [
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "\\n"
                    },
                    {
                        "type": "str",
                        "value": " "
                    }
                ]
            },
            {
                "name": "trim",
                "params": []
            }
        ],
        "prop": "message",
        "propout": "message",
        "object": "msg",
        "objectout": "msg",
        "x": 1130,
        "y": 260,
        "wires": [
            [
                "eaee88f3.fe9138"
            ]
        ]
    },
    {
        "id": "4e1a58dc.5faf88",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "5cda64bd.38daec",
        "name": "Log",
        "func": "node.log(\"NOTIF / HTML5 => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1610,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e9da4b4c.c20068",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "ecef5432.e60ef8",
        "name": "Log",
        "func": "node.log(\"NOTIF / Home Assistant => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1830,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "7bedaa16.93eda4",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "57b5e8a3.37d5e8",
        "name": "Log",
        "func": "node.log(\"NOTIF / Email => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1830,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "18cbe457.1dfa6c",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "3ba17f01.1ad71",
        "name": "Log",
        "func": "node.log(\"NOTIF / TTS => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3370,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "dc0af305.08c5c",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "Log",
        "func": "node.log(\"NOTIF / Mattermost => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2090,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "1fd1b55c.8aa76b",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.mattermost.dest.\"+dest) || 'undefined'\n\nmsg.data = {};\nmsg.webhook = config;\nmsg.data.username = \"SmartHome\";\nmsg.data.icon_url = \"https://www.contextworld.com/documents/20126/237707/Smart+Home_M.Blue+Icon.png/c92f8c28-6f99-c685-d21a-85c7cf90b515?t=1544434686070\";\nmsg.data.text = msg.message;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 820,
        "wires": [
            [
                "5b2efbf4.ae0024"
            ]
        ]
    },
    {
        "id": "865195e1.9bc408",
        "type": "http request",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "Post Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1640,
        "y": 820,
        "wires": [
            [
                "5cef7e36.fb01f"
            ]
        ]
    },
    {
        "id": "320a88d2.7cb0a8",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "Format Query",
        "func": "msg.url = msg.webhook\nmsg.method = \"POST\"\nmsg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.payload = msg.data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 820,
        "wires": [
            [
                "865195e1.9bc408"
            ]
        ]
    },
    {
        "id": "5b2efbf4.ae0024",
        "type": "json",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "Convert Data to String",
        "property": "data",
        "action": "",
        "pretty": false,
        "x": 1210,
        "y": 820,
        "wires": [
            [
                "320a88d2.7cb0a8"
            ]
        ]
    },
    {
        "id": "abcea9a6.402238",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "Log",
        "func": "node.log(\"NOTIF / Discord => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2090,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "7aee817f.03b6a",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.discord.dest.\"+dest) || 'undefined'\nmsg.webhook = config;\n\n// MESSAGE\nusername = msg.username || \"undefined\";\ncontent = msg.message || \"undefined\";\navatar_url = msg.avatar_url || \"undefined\";\n\n// AUHTOR\nembeds_author_name = msg.embeds_author_name || \"undefined\";\nembeds_author_icon_url = msg.embeds_author_icon_url || \"undefined\";\nembeds_author_url = msg.embeds_author_url || \"undefined\";\n\nembeds_title = msg.embeds_title || \"undefined\";\nembeds_description = msg.embeds_description || \"undefined\";\nembeds_image = msg.embeds_image || \"undefined\";\nembeds_color = msg.embeds_color || \"undefined\";\nembeds_url = msg.embeds_url || \"undefined\";\nembeds_thumbnail = msg.embeds_thumbnail || \"undefined\";\nembeds_footer = msg.embeds_footer || \"undefined\";\n\nmsg.data = {};\nembeds_data = [];\n\nif (content != \"undefined\") {\n    msg.data.content = content;\n}    \nif (username == \"undefined\") {\n    msg.data.username = \"Node-RED\";\n}else{\n    msg.data.username = username;    \n}\nif (avatar_url == \"undefined\") {\n    msg.data.avatar_url = \"https://silanus.fr/sin/wp-content/uploads/2018/02/node-red-icon.png\";\n}else{\n    msg.data.avatar_url = avatar_url;    \n}\n\nif (embeds_url != \"undefined\" || embeds_title != \"undefined\" || embeds_description != \"undefined\" || embeds_thumbnail != \"undefined\" || embeds_image != \"undefined\" || embeds_footer != \"undefined\") {\n    message = {}\n    \n    if (embeds_author_name != \"undefined\" || embeds_author_icon_url != \"undefined\" || embeds_author_url != \"undefined\") {\n        message.author = {}\n        \n        if(embeds_author_name != \"undefined\") {\n            message.author.name = embeds_author_name;\n        }\n        if(embeds_author_url != \"undefined\") {\n            message.author.url = embeds_author_url;\n        }\n        if(embeds_author_icon_url != \"undefined\") {\n            message.author.icon_url = embeds_author_icon_url;\n        }    \n    }\n    \n    if(embeds_title != \"undefined\") {\n        message.title = msg.embeds_title;\n    }\n    if(embeds_description != \"undefined\") {\n        message.description = msg.embeds_description;\n    }\n    if(embeds_color != \"undefined\") {\n        message.color = parseInt(msg.embeds_color,16);\n    }    \n    if(embeds_url != \"undefined\") {\n        message.url = msg.embeds_url;\n    }    \n    if(embeds_thumbnail != \"undefined\") {\n        message.thumbnail = {};\n        message.thumbnail.url = msg.embeds_thumbnail;\n    }\n    if(embeds_image != \"undefined\") {\n        message.image = {};\n        message.image.url = msg.embeds_image;\n    }\n    if(embeds_footer != \"undefined\") {\n        message.footer = {};\n        message.footer.text = msg.embeds_footer;\n    }\n\n    embeds_data.push(message);\n    msg.data.embeds = embeds_data;\n}  \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 640,
        "wires": [
            [
                "e02544ec.c0c9c8"
            ]
        ]
    },
    {
        "id": "c8f2b71d.230328",
        "type": "http request",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "Post Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1640,
        "y": 640,
        "wires": [
            [
                "e896886c.c45658"
            ]
        ]
    },
    {
        "id": "5e87cf54.db54",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "Format Query",
        "func": "msg.url = msg.webhook\nmsg.method = \"POST\"\nmsg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.payload = msg.data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 640,
        "wires": [
            [
                "c8f2b71d.230328"
            ]
        ]
    },
    {
        "id": "e02544ec.c0c9c8",
        "type": "json",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "Convert Data to String",
        "property": "data",
        "action": "",
        "pretty": false,
        "x": 1210,
        "y": 640,
        "wires": [
            [
                "5e87cf54.db54"
            ]
        ]
    },
    {
        "id": "fe563f3b.27a4",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Get Configuration",
        "func": "dest = msg.dest ;\nconfig = global.get(\"notif.telegram.dest.\"+dest) || 'undefined'\n\nvar retour = [];\n\n// Message\nif (msg.message !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'message',\n      content: msg.message\n    }\n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload});\n\n// Image\nif (msg.image !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'photo',\n      content: msg.image\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n// Video\nif (msg.video !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'video',\n      content: msg.video\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n// Audio\nif (msg.audio !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'audio',\n      content: msg.audio\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n// Location\nif (msg.location !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'location',\n      content: msg.location\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n\n// Animation\nif (msg.animation !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'animation',\n      content: msg.animation\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n\n// Voice\nif (msg.voice !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'voice',\n      content: msg.voice\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n// Contact\nif (msg.contact !== \"\") {\n    payload = {\n      chatId: config,\n      type: 'contact',\n      content: msg.contact\n    }        \n}else{\n    payload = {\"chatId\": none};\n}\nretour.push({payload})\n\n\nreturn retour;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 1100,
        "wires": [
            [
                "a1937b5e.f10f08"
            ],
            [
                "74de5d62.659ac4"
            ],
            [
                "6bccc1cf.04292"
            ],
            [
                "ba9c06f3.258228"
            ],
            [
                "fdc2c34.6b5b44"
            ],
            [
                "4adb3e12.c6031"
            ],
            [
                "8098137f.117d6"
            ],
            [
                "8c1c7eae.f4fe8"
            ]
        ]
    },
    {
        "id": "a5718a48.8221c8",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Log",
        "func": "node.log(\"NOTIF / Telegram => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1670,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "a1937b5e.f10f08",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Message ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 960,
        "wires": [
            [
                "bb563cb0.de18d"
            ]
        ]
    },
    {
        "id": "74de5d62.659ac4",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Image ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1000,
        "wires": [
            [
                "bb563cb0.de18d"
            ]
        ]
    },
    {
        "id": "6bccc1cf.04292",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Video ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1040,
        "wires": [
            [
                "bb563cb0.de18d"
            ]
        ]
    },
    {
        "id": "ba9c06f3.258228",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Audio ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1080,
        "wires": [
            [
                "bb563cb0.de18d"
            ]
        ]
    },
    {
        "id": "bb563cb0.de18d",
        "type": "telegram sender",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "",
        "bot": "930eda8b.cf74a8",
        "x": 1510,
        "y": 1100,
        "wires": [
            [
                "a5718a48.8221c8"
            ]
        ]
    },
    {
        "id": "8098137f.117d6",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Voice ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1200,
        "wires": [
            [
                "bb563cb0.de18d"
            ]
        ]
    },
    {
        "id": "fdc2c34.6b5b44",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Location ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1120,
        "wires": [
            [
                "bb563cb0.de18d"
            ]
        ]
    },
    {
        "id": "4adb3e12.c6031",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Animation ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1160,
        "wires": [
            [
                "bb563cb0.de18d"
            ]
        ]
    },
    {
        "id": "8c1c7eae.f4fe8",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "286dba59.7ed416",
        "name": "Contact ?",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 1240,
        "wires": [
            [
                "bb563cb0.de18d"
            ]
        ]
    },
    {
        "id": "e9b7f1e.7b2dc1",
        "type": "link out",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "Retry Discord",
        "links": [
            "d1db25d0.686ce8"
        ],
        "x": 2280,
        "y": 600,
        "wires": [],
        "l": true
    },
    {
        "id": "d1db25d0.686ce8",
        "type": "link in",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "Retry Discord",
        "links": [
            "e9b7f1e.7b2dc1"
        ],
        "x": 1250,
        "y": 600,
        "wires": [
            [
                "5e87cf54.db54"
            ]
        ],
        "l": true
    },
    {
        "id": "6a81a4ef.2d8d9c",
        "type": "link out",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "Retry Mattermost",
        "links": [
            "2b204825.ddc228"
        ],
        "x": 2290,
        "y": 780,
        "wires": [],
        "l": true
    },
    {
        "id": "2b204825.ddc228",
        "type": "link in",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "Retry Mattermost",
        "links": [
            "6a81a4ef.2d8d9c"
        ],
        "x": 1230,
        "y": 780,
        "wires": [
            [
                "320a88d2.7cb0a8"
            ]
        ],
        "l": true
    },
    {
        "id": "1c900d5e.09b683",
        "type": "delay",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2100,
        "y": 600,
        "wires": [
            [
                "e9b7f1e.7b2dc1"
            ]
        ]
    },
    {
        "id": "8275ade.a46ba5",
        "type": "delay",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2100,
        "y": 780,
        "wires": [
            [
                "6a81a4ef.2d8d9c"
            ]
        ]
    },
    {
        "id": "e896886c.c45658",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "",
        "func": "if (msg.statusCode < 300 && msg.statusCode >= 200) {\n    msg.success = true;\n}else{\n    msg.success = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1820,
        "y": 640,
        "wires": [
            [
                "2e838fa7.9cc17"
            ]
        ]
    },
    {
        "id": "2e838fa7.9cc17",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "ecdc435a.d458e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 640,
        "wires": [
            [
                "1c900d5e.09b683"
            ],
            [
                "abcea9a6.402238"
            ]
        ]
    },
    {
        "id": "5cef7e36.fb01f",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "",
        "func": "if (msg.statusCode < 300 && msg.statusCode >= 200) {\n    msg.success = true;\n}else{\n    msg.success = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1820,
        "y": 820,
        "wires": [
            [
                "8e5741c9.438b9"
            ]
        ]
    },
    {
        "id": "8e5741c9.438b9",
        "type": "switch",
        "z": "711f44dc.b8379c",
        "g": "64bee8ef.b70198",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 820,
        "wires": [
            [
                "8275ade.a46ba5"
            ],
            [
                "dc0af305.08c5c"
            ]
        ]
    },
    {
        "id": "75261914.04f268",
        "type": "http request",
        "z": "711f44dc.b8379c",
        "g": "53f4a8db.b4d4",
        "name": "SMS via HTTP",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1200,
        "y": 1350,
        "wires": [
            [
                "8dd71a85.f2d438"
            ]
        ]
    },
    {
        "id": "8dd71a85.f2d438",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "53f4a8db.b4d4",
        "name": "Log",
        "func": "node.log(\"NOTIF / SMS => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1350,
        "y": 1350,
        "wires": [
            []
        ]
    },
    {
        "id": "a3064f17.e8a538",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "53f4a8db.b4d4",
        "name": "Get Configuration",
        "func": "var dest = msg.dest ;\nvar sms_url = global.get('notif.sms.url');\nvar sms_number = global.get(\"notif.sms.dest.\"+dest) || 'undefined'\nvar message = encodeURIComponent(msg.message);\n\nmsg.method = \"POST\"\nmsg.url = sms_url.replace(\"##SMSNUMBER##\",sms_number).replace(\"##MESSAGE##\",message)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 1350,
        "wires": [
            [
                "75261914.04f268"
            ]
        ]
    },
    {
        "id": "fd1b76aa.ef0938",
        "type": "http request",
        "z": "711f44dc.b8379c",
        "g": "7e7775b.f8ebb8c",
        "name": "awtrix notify",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1190,
        "y": 1460,
        "wires": [
            [
                "39428588.44afda"
            ]
        ]
    },
    {
        "id": "39428588.44afda",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "7e7775b.f8ebb8c",
        "name": "Log",
        "func": "node.log(\"NOTIF / Awtrix => OK\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1350,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "4f3f2917.7e3108",
        "type": "function",
        "z": "711f44dc.b8379c",
        "g": "7e7775b.f8ebb8c",
        "name": "Get Configuration",
        "func": "var dest = msg.dest;\nvar message = msg.message;\nvar awtrix_host = global.get(\"notif.awtrix.dest.\" + dest) || 'undefined'\n\nmsg.method = \"POST\"\nmsg.url = \"http://\" + awtrix_host + \"/api/v3/notify\"\n\nmsg.payload = {\n \"name\": \"NodeRedNotification\",\n \"icon\": 225,\n \"moveIcon\": true,\n \"lifetime\": 999999,\n \"text\": message,\n \"repeat\": 2,\n \"color\": [0, 255, 0]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 1460,
        "wires": [
            [
                "fd1b76aa.ef0938"
            ]
        ]
    },
    {
        "id": "7f33d7bb.9361a8",
        "type": "server",
        "name": "Home Assistant",
        "legacy": false,
        "addon": false,
        "rejectUnauthorizedCerts": false,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true
    },
    {
        "id": "930eda8b.cf74a8",
        "type": "telegram bot",
        "botname": "Node-RED",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "1000",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    }
]
